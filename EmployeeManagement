abstract class Employee{
   protected String name;
   protected int empId;
   protected double basicSalary;
  
   public Employee(String name,int empId,double basicSalary)
   {
    this.name=name;
    this.empId=empId;
    this.basicSalary=basicSalary;
   }
  abstract double calculateSalary();
  void displaySalary()
  {
    System.out.println("Employee ID:"+empId);
    System.out.println("Name:"+name);
    System.out.println("Salary:" +calculateSalary());
  }
}
class FullTimeEmployee extends Employee{
  FullTimeEmployee(String name,int empId,double basicSalary){
    super(name,empId,basicSalary);
  }
  double calculateSalary(){
    return basicSalary+(0.2*basicSalary);
  }
}
class PartTimeEmployee extends Employee{
  double hourlyRate;
  int hoursWorked;
  PartTimeEmployee(String name,int empId,double basicSalary,double hourlyRate,int hoursWorked){
    super(name,empId,basicSalary);
    this.hourlyRate=hourlyRate;
    this.hoursWorked=hoursWorked;
  }
  double calculateSalary(){
    return basicSalary+(hourlyRate*hoursWorked);
  }
}   
public class EmployeeManagement{
  public static void main(String[] args)
  {
    FullTimeEmployee FTE =new FullTimeEmployee("Alice",101,50000);
    PartTimeEmployee PTE =new PartTimeEmployee("Bob",102,20000,20,500);
    FTE.displaySalary();
    PTE.displaySalary();
  }
}    

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
OUTPUT:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Employee ID:101
Name:Alice
Salary:60000.0
Employee ID:102
Name:Bob
Salary:30000.0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
